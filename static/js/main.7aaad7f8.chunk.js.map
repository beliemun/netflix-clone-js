{"version":3,"sources":["assets/noimage.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["StyledHeader","styled","header","List","ul","Item","li","props","current","StyledLink","Link","withRouter","pathname","location","to","Container","div","Title","h3","Grid","Section","title","children","Text","span","Loader","console","log","Contianer","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","role","aria-label","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Helmet","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieAPI","get","append_videos","term","query","encodeURIComponent","tvAPI","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setError","setLoading","useEffect","loadDatas","a","data","results","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","setTopRated","setAiringToday","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","setMovieResults","setTvResults","setSearchTerm","searchByTerm","event","preventDefault","target","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","original_title","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","setResult","includes","match","push","history","parsedId","parseInt","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aaad7f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noimage.d644f35e.jpg\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  width: 100%;\n  height: 50px;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.8);\n  font-size: 16px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 100px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#e74c3c\" : \"transparent\")};\n  transition: border-bottom 0.3s ease-in-out;\n`;\n\nconst StyledLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Header = ({ location: { pathname } }) => {\n  return (\n    <StyledHeader>\n      <List>\n        <Item current={pathname === \"/\"}>\n          <StyledLink to=\"/\">Moives</StyledLink>\n        </Item>\n        <Item current={pathname === \"/tv\"}>\n          <StyledLink to=\"/tv\">TV</StyledLink>\n        </Item>\n        <Item current={pathname === \"/search\"}>\n          <StyledLink to=\"/search\">Search</StyledLink>\n        </Item>\n      </List>\n    </StyledHeader>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    padding:0 20px;\n\n    &:not(:first-child){\n        margin-top:20px;\n    }\n`;\n\nconst Title = styled.h3`\n    font-size:18px;\n    font-weight:600;\n    margin-bottom:10px;\n`;\n\nconst Grid = styled.div`\n    line-height:18px;\n    display:grid;\n    grid-template-columns: repeat(auto-fill, minmax(min-content, 150px));\n    gap:10px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: #bdc3c7;\n    font-size:20px;\n    font-weight: 600;\n    padding-top:20px;\n`;\n\nconst Loader = () =>\n    <Container>\n        {console.log(\"loader\")}\n        <Text>Loading..</Text>\n    </Container>\n\nexport default Loader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Contianer = styled.div`\n    width:100%;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color : ${props => props.color};\n    font-size:20px;\n    font-weight: 600;\n    line-height:30px;\n`;\n\nconst Message = ({ text, color }) => (\n    <Contianer>\n        <Text color={color}>{text}</Text>\n    </Contianer>\n)\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size:12px;\n    padding:5px;\n`;\n\n\nconst Image = styled.div`\n    height:240px;\n    background-size:cover;\n    background-position: center center;\n    background-image: url(${props => props.bgUrl});\n    border-radius:10px;\n    transition: opacity 0.15s ease-in-out;\n`;\n\nconst Rating = styled.span`\n    position: absolute;\n    right: 5px;\n    bottom: 3px;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position: relative;\n    &:hover {\n        ${Image}{\n            opacity:0.3;\n        }\n        ${Rating}{\n            opacity:1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display:block;\n    font-size: 13px;\n    margin-bottom:3px;\n`;\n\nconst Year = styled.span`\n    font-size: 11px;\n    color: rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n                            : require(\"../assets/noimage.jpg\").default\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"star\">⭐️</span>\n                    {\" \"}\n                    {rating}/10\n            </Rating>\n            </ImageContainer>\n            <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport helmet, { Helmet } from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding-top:20px;\n`;\n\nconst HomePresenter = ({\n    nowPlaying,\n    upComing,\n    popular,\n    error,\n    loading }) => loading ? <Loader /> :\n        <>\n            <Helmet>\n                <title>Movies | Nicoflix</title>\n            </Helmet>\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title={\"Now Playing\"}>{nowPlaying.map(movie =>\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                    </Section>\n                )}\n                {upComing && upComing.length > 0 && (\n                    <Section title={\"Up Coming\"}>{upComing.map(movie =>\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title={\"Popular Shows\"}>{popular.map(movie =>\n                        <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        />\n                    )}\n                    </Section>\n                )}\n                {error && <Message text={error} color={\"#e74c3c\"} />}\n            </Container>\n        </>\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upComing: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n}\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"3a377862d155dc0b034c393fad709b13\",\n        language: \"ko-KR\",\n    },\n});\n\nexport const movieAPI = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upComing: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_videos: \"vidoes\",\n            },\n        }),\n    search: (term) =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term),\n            },\n        }),\n};\n\nexport const tvAPI = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_videos: \"vidoes\",\n            },\n        }),\n    search: (term) =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term),\n            },\n        }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieAPI } from \"api\";\n\nconst HomeContainer = () => {\n  const [nowPlaying, setNowPlaying] = useState(null);\n  const [upComing, setUpcoming] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDatas();\n  }, [])\n\n  const loadDatas = async () => {\n    try {\n      const { data: { results: nowPlaying } } = await movieAPI.nowPlaying();\n      const { data: { results: upComing } } = await movieAPI.upComing();\n      const { data: { results: popular } } = await movieAPI.popular();\n      setNowPlaying(nowPlaying);\n      setUpcoming(upComing);\n      setPopular(popular);\n    } catch {\n      setError(\"Can't find moives information.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <HomePresenter\n      nowPlaying={nowPlaying}\n      upComing={upComing}\n      popular={popular}\n      loading={loading}\n      error={error}\n    />\n  );\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding-top:20px;\n`;\n\nconst TVPresenter = ({\n    topRated,\n    popular,\n    airingToday,\n    error,\n    loading }) => loading ? <Loader /> :\n        <>\n            <Helmet>\n                <title>Movies | Nicoflix</title>\n            </Helmet>\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map(show =>\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                isMovie={false}\n                            />\n                        )}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Shows\">\n                        {popular.map(show =>\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                isMovie={false}\n                            />\n                        )}\n                    </Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"Airing Today\">\n                        {airingToday.map(show =>\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                isMovie={false}\n                            />\n                        )}\n                    </Section>\n                )}\n                {error && <Message text={error} color={\"#e74c3c\"} />}\n            </Container>\n        </>\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { useState, useEffect } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvAPI } from \"api\";\n\nconst TVContainer = () => {\n  const [topRated, setTopRated] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [airingToday, setAiringToday] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDatas();\n  }, [])\n\n  const loadDatas = async () => {\n    try {\n      const { data: { results: topRated } } = await tvAPI.topRated();\n      const { data: { results: popular } } = await tvAPI.popular();\n      const { data: { results: airingToday } } = await tvAPI.airingToday();\n      setTopRated(topRated);\n      setPopular(popular);\n      setAiringToday(airingToday);\n    } catch {\n      setError(\"Can't find TV information.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <TVPresenter\n      topRated={topRated}\n      popular={popular}\n      airingToday={airingToday}\n      loading={loading}\n      error={error}\n    />\n  );\n}\n\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding-top:20px;\n`;\n\nconst Form = styled.form`\n    width: 100%;\n    padding-left:20px;\n`;\n\nconst Input = styled.input`\n    all:unset;\n    font-size: 30px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    error,\n    loading,\n    handleSubmit,\n    updateTerm }) =>\n    <>\n        <Helmet>\n            <title>Movies | Nicoflix</title>\n        </Helmet>\n        <Container>\n            <Form onSubmit={handleSubmit}>\n                <Input placeholder=\"Search Movies or TV Shows..\" value={searchTerm} onChange={updateTerm} />\n            </Form>\n            {loading ? <Loader /> : <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Moive Results\">\n                        {movieResults.map(movie =>\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        )}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Show Results\">\n                        {tvResults.map(show =>\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                title={show.original_name}\n                                imageUrl={show.poster_path}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        )}\n                    </Section>\n                )}\n                {error && <Message text={error} color=\"#e74c3c\" />}\n                {movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 &&\n                    <Message text={`Nothing found`} color=\"#bdc3c7\" />}\n            </>}\n        </Container>\n    </>\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieAPI, tvAPI } from \"api\";\n\nconst SearchContainer = () => {\n  const [movieResults, setMovieResults] = useState(null);\n  const [tvResults, setTvResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n  }, [])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchTerm !== \"\") {\n      searchByTerm();\n    }\n  }\n\n  const updateTerm = (event) => {\n    const { target: { value } } = event;\n    setSearchTerm(value);\n  }\n\n  const searchByTerm = async () => {\n    try {\n      setLoading(true);\n      const { data: { results: movieResults } } = await movieAPI.search(searchTerm);\n      const { data: { results: tvResults } } = await tvAPI.search(searchTerm);\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n    } catch {\n      setError(\"Can't find results.\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      loading={loading}\n      error={error}\n      handleSubmit={handleSubmit}\n      updateTerm={updateTerm}\n    />\n  );\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n    width:100%;\n    height:calc(100vh - 50px);\n    position:absolute;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background-image:url(${props => props.bgImage});\n    background-size:cover;\n    background-position:center center;\n    filter: blur(5px);\n    opacity: 0.5;\n`;\n\nconst Content = styled.div`\n    display:flex;\n    position: relative;\n    width:100%;\n    height:100%;\n    z-index:1;\n    padding:50px;\n`;\n\nconst Cover = styled.div`\n    width:30%;\n    height:100%;\n    background-image:url(${props => props.bgImage});\n    background-size:cover;\n    background-position:center center;\n`;\n\nconst Data = styled.div`\n    width : 70%;\n    margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n    font-size:32px;\n    margin-bottom:20px;\n`;\n\nconst ItemContainer = styled.div`\n    margin-bottom:20px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 5px;\n`;\n\nconst Overview = styled.p`\n    font-size: 14px;\n    opacity: 0.7;\n    line-height : 1.5;\n    width: 50%;\n`;\n\nconst DetailPresenter = ({\n    result,\n    error,\n    loading }) => loading ?\n        (\n            <>\n                <Helmet>\n                    <title> Loading.. | Nicoflix</title>\n                </Helmet>\n                <Loader />\n            </>\n        ) : (\n            <>\n                <Helmet>\n                    {result && (\n                        <title>{result.original_title ? result.original_title : result.original_name} | Nicoflix</title>\n                    )}\n                </Helmet>\n                <Container>\n                    {result && (\n                        <>\n                            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n                            <Content>\n                                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noimage.jpg\")} />\n                                <Data>\n                                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                                    <ItemContainer>\n                                        <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n                                        <Divider>•</Divider>\n                                        <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n                                        <Divider>•</Divider>\n                                        <Item>{result.genres &&\n                                            result.genres.map((genre, index) =>\n                                                index === result.genres.length - 1\n                                                    ? genre.name\n                                                    : `${genre.name} / `\n                                            )}\n                                        </Item>\n                                    </ItemContainer>\n                                    <Overview>{result.overview}</Overview>\n                                </Data>\n                            </Content>\n                        </>\n                    )}\n                </Container>\n            </>\n        );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { movieAPI, tvAPI } from \"api\";\nimport React, { useState, useEffect } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\n\nconst DetailContainer = (props) => {\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { location: { pathname } } = props;\n  const [isMovie] = useState(pathname.includes(\"/movie/\"));\n\n  useEffect(() => {\n    const {\n      match: { params: { id } },\n      history: { push }\n    } = props;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    loadDatas(parsedId);\n  }, [props]);\n\n  const loadDatas = async (parsedId) => {\n    let result = null;\n    try {\n      if (isMovie) {\n        const { data } = await movieAPI.movieDetail(parsedId);\n        result = data;\n      } else {\n        const { data } = await tvAPI.showDetail(parsedId);\n        result = data;\n      }\n    } catch {\n      setError(\"Can't find anything.\");\n    } finally {\n      setLoading(false);\n      setResult(result);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"loading : \", loading);\n  }, [loading])\n\n  return (\n    <DetailPresenter\n      result={result}\n      error={error}\n      loading={loading}\n    />\n  );\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\n\nconst Router = () => {\n  return (\n    <HashRouter>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/tv/\" component={TV} />\n          <Route path=\"/search/\" component={Search} />\n          <Route path=\"/movie/:id\" component={Detail} />\n          <Route path=\"/show/:id\" component={Detail} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </HashRouter>\n  );\n};\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        color:white;\n        background-color: rgba(20, 20, 20, 1);\n        padding-top: 50px\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}